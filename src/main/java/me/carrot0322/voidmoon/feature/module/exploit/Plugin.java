package me.carrot0322.voidmoon.feature.module.exploit;

import com.google.common.eventbus.Subscribe;
import com.mojang.realmsclient.gui.ChatFormatting;
import me.carrot0322.voidmoon.event.impl.PacketEvent;
import me.carrot0322.voidmoon.feature.module.Module;
import me.carrot0322.voidmoon.feature.module.movement.Sprint;
import me.carrot0322.voidmoon.util.client.ChatUtil;
import net.minecraft.network.play.client.C14PacketTabComplete;
import net.minecraft.network.play.server.S3APacketTabComplete;

import java.util.Arrays;
import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;

import static me.carrot0322.voidmoon.util.client.Util.mc;

public class Plugin extends Module {
    public Plugin() {
        super("Plugin", "", Category.EXPLOIT, true, false, false);
        setInstance();
    }

    @SuppressWarnings("SpellCheckingInspection")
    private String[] knownAntiCheats = {
            "nocheatplus",
            "grimac",
            "aac",
            "intave",
            "horizon",
            "vulcan",
            "Vulcan",
            "spartan",
            "kauri",
            "anticheatreloaded",
            "matrix",
            "themis",
            "negativity",
            "liteanticheat"
    };

    @SuppressWarnings("SpellCheckingInspection")
    private String[] knownAntiCrasher = {
            "exploitfixer",
            "anticrasher",
            "lpx",
            "antipakcetexploit",
            "spigotguard",
            "epicguard",
            "coffeeprotect",
            "iceguard",
            "nemesis",
            "easyguard",
            "sierra",
            "redshield",
            "honey"
    };

    int ticks = 0;

    @Override
    public void onEnable(){
        ticks = 0;
        mc.getNetHandler().addToSendQueue(new C14PacketTabComplete("/"));
    }

    @Override
    public void onTick(){
        if(ticks >= 60){
            ChatUtil.sendError("Plugins: Timeout");
            setEnabled(false);
        }
        else
            ticks++;
    }

    @Subscribe
    public void onPacket(PacketEvent event) {
        Object packet = event.getPacket();

        if (packet instanceof S3APacketTabComplete) {
            S3APacketTabComplete suggestionsPacket = (S3APacketTabComplete) packet;
            Set<String> plugins = Arrays.stream(suggestionsPacket.func_149630_c())
                    .map(cmd -> {
                        String[] command = cmd.split(":");
                        if (command.length > 1) {
                            return command[0].replace("/", "");
                        } else {
                            return null;
                        }
                    })
                    .filter(Objects::nonNull)
                    .distinct()
                    .sorted()
                    .collect(Collectors.toSet());

            takePluginInput(plugins);
        }
    }

    private void takePluginInput(Set<String> plugins) {
        if (!plugins.isEmpty()) {
            String pluginsString = plugins.stream()
                    .map(plugin -> {
                        if (Arrays.asList(knownAntiCheats).contains(plugin))
                            return ChatFormatting.GREEN + plugin; // AC plugin
                        else if (Arrays.asList(knownAntiCrasher).contains(plugin))
                            return ChatFormatting.AQUA + plugin; // AntiCrasher plugin
                        else
                            return ChatFormatting.RED + plugin; // Other plugin
                    })
                    .collect(Collectors.joining(" "));

            ChatUtil.sendInfo(ChatFormatting.GREEN + "Plugins " + ChatFormatting.GRAY + "(" + ChatFormatting.DARK_GRAY + plugins.size() + ChatFormatting.GRAY + "): " + pluginsString);
        } else {
            ChatUtil.sendError("No Plugins Found");
        }
        setEnabled(false);
    }

    private static Plugin INSTANCE = new Plugin();

    public static Plugin getInstance() {
        if (INSTANCE == null)
            INSTANCE = new Plugin();
        return INSTANCE;
    }

    private void setInstance() {
        INSTANCE = this;
    }
}
